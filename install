#!/usr/bin/env bash
shopt -s globstar
BASEDIR=$(dirname `readlink -f $0`)
DOTFILES=$BASEDIR
source $BASEDIR/zsh/colors.zsh
source $BASEDIR/zsh/functions.zsh

## Setup values
#######################################

# File created by installer
DOTFILENAME=.dotfiles

# Directory used to install dotfiles
INSTALLDIR=~

# Default groups to install
DGRPS=( base-devel )

# Default packages to auto install
DPKGS=( git vim cmake clang gtest dtags sublime-text-dev )

## Constructor
#######################################
function Bootstrapper {
	InstallPackages
	SymlinkFiles
}


## Packages
#######################################
CMDEXPAGRP="pacman -Sg"
CMDFINDPKG="pacman -Qs"
CMDINSTPKG="pacman -S --noconfirm"

PKGS=()
function InstallPackages {
	PREFIX="$CYELLOW[$CRESET$CGRAY"packages"$CRESET$CYELLOW]$CRESET"
	progress "$PREFIX: Checking ..."

	for grp in ${DGRPS[*]}; do
		CheckGroup $grp
	done

	for pkg in ${DPKGS[*]}; do
		CheckPackage $pkg
	done

	SPKGS="$(joinstr " " "${PKGS[@]}")"
	if ! [ "$SPKGS" == "" ]; then
		info "$PREFIX: Installing ...\n"
		if ! sudo $CMDINSTPKG $SPKGS; then
			error "$PREFIX: Error"
		fi
	fi

	success "$PREFIX: Installed ${#PKGS[@]} new packages"
}

function CheckGroup {
	GRPNAME=$1
	GRPPKGS=("$($CMDEXPAGRP $GRPNAME)")

	for pkg in $GRPPKGS; do
		if [ ! $pkg == $GRPNAME ]; then
			CheckPackage $pkg "$CYELLOW[$CRESET$CGRAY$GRPNAME$CRESET$CYELLOW]$CRESET"
		fi
	done
}

function _internalCheckPackage {
	PGKNAME="$1"
	# Search for the package with regex
	CHECK="$($CMDFINDPKG "$PKGNAME" | grep "local" | grep "$PKGNAME ")"
	if [ -z "$CHECK" ]; then echo 1; return;
	else echo 0; return; fi
}

function CheckPackage {
	PKGNAME=$1
	GROUP=$2
	progress "$GROUP$CYELLOW[$CRESET$CGRAY$PKGNAME$CRESET$CYELLOW]$CRESET: looking ..."
	if [[ $(_internalCheckPackage "$PKGNAME") == 1 ]]; then
	# if [[ $(_isInstalled "$PKGNAME") == 1 ]]; then
		if confirm "$GROUP$CYELLOW[$CRESET$CGRAY$PKGNAME$CRESET$CYELLOW]$CRESET: continue installation?"; then
			success "$GROUP$CYELLOW[$CRESET$CGRAY$PKGNAME$CRESET$CYELLOW]$CRESET: installation pending."
			PKGS+=($PKGNAME)
		fi
	fi
}


## Symlinking
#######################################
function SymlinkFiles {
	PREFIX="$CYELLOW[$CRESET$CGRAY"symlinks"$CRESET$CYELLOW]$CRESET"
	progress "$PREFIX: Checking ..."

	TEMPLATES=$BASEDIR/**/*.tmpl
	for template in $TEMPLATES; do
		ParseConfigTemplate $template
	done

	SYMLINKS=$BASEDIR/**/*.symlink
	for symlink in $SYMLINKS; do
		SymlinkDotfile $INSTALLDIR $symlink
	done

	# CONFIGPATH=$BASEDIR/config
	# SYMLINKS=$CONFIGPATH/**/*.symlink-config
	# for symlink in $SYMLINKS; do
	# 	basepath=$(dirname $symlink)
	# 	installpath=${basepath//$CONFIGPATH\//}
	# 	SymlinkConfig $INSTALLDIR/.config/$installpath $symlink
	# done

	success "$PREFIX: Finished"
}

function ParseConfigTemplate {
	TMPL=$1
	FILE=${template/\.tmpl/}
	TMPLBASE=$(basename $TMPL)

	PREFIX="$CYELLOW[$CRESET$CGRAY$TMPLBASE$CRESET$CYELLOW]$CRESET"
	progress "$PREFIX: looking ..."

	if ! [ -f $FILE ]; then
		LINK=""
		while read line || [[ -n $line ]]; do
			if [[ $line =~ %(.+)% ]]; then
				VNAME="${BASH_REMATCH[1]}"
				question "$PREFIX: <${VNAME}>: "
				line="${line//%$VNAME%/$REPLY}"
			fi
			LINK="$LINK$line\n"
		done < $TMPL

		printf "$LINK" > $FILE
		success "$PREFIX: Generated"
	fi
}

function SymlinkDotfile {
	targetdir=$1
	symlink=$2

	sympath=$(dirname $symlink)
	symfile=$(basename $symlink)

	progress "Symlink $CYELLOW[$CRESET$CGRAY$filename$CRESET$CYELLOW]$CRESET: converting to dotfile notation"
	SymlinkFile $symlink $targetdir $sympath/.$symfile
}

function SymlinkConfig {
	targetdir=$1
	symlink=$2

	progress "Symlink $CYELLOW[$CRESET$CGRAY$filename$CRESET$CYELLOW]$CRESET: converting to config notation"
	SymlinkFile $symlink $targetdir $symlink
}

function SymlinkFile {
	sourcelink=$1
	targetdir=$2
	symlink=$3
	symbase=$(basename $symlink)
	filename="${symbase%.*}"

	progress "Symlink $CYELLOW[$CRESET$CGRAY$filename$CRESET$CYELLOW]$CRESET: looking..."
	progress "Symlink $CYELLOW[$CRESET$CGRAY$filename$CRESET$CYELLOW]$CRESET: creating directory"
	mkdir -p $targetdir

	progress "Symlink $CYELLOW[$CRESET$CGRAY$filename$CRESET$CYELLOW]$CRESET: creating symlink"
	ln -fs $(readlink -f $sourcelink) $targetdir/$filename

	success "Symlink $CYELLOW[$CRESET$CGRAY$filename$CRESET$CYELLOW]$CRESET: symlink created"
}


################################################################################
### Bootstrap                                                                ###
### ------------------------------------------------------------------------ ###
### translate long args to short args                                        ###
### thanks to:                                                               ###
### https://gist.github.com/adamhotep/895cebf290e95e613c006afbffef09d7       ###
################################################################################
Bootstrapper
